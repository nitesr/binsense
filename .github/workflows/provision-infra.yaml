name: provision-infra
on:
    workflow_dispatch:
        inputs:
            region:
                description: 'AWS Region'
                required: true
                default: 'us-east-1'
            keypairName:
                description: 'key pair name'
                required: true
                default: 'BinFinderKeyAlt'
            ec2User:
                description: 'ec2 host user'
                required: true
                default: 'ec2-user'
jobs:
    provision-infra:
        name: Deploy stack to AWS
        runs-on: ubuntu-latest
        environment: cloud
        outputs:
            env-name: ${{ steps.env-name.outputs.environment }}
        permissions:
          contents: read
          id-token: write
        steps:
        - name: Checkout
          uses: actions/checkout@v4

        - name: Configure AWS credentials
          id: creds
          uses: aws-actions/configure-aws-credentials@v4
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: ${{ github.event.inputs.region}}

        - name: Configure environment name
          id: env-name
          env:
            REPO: ${{ github.repository }}
          run: |
            ENVIRONMENT=`echo $REPO | cut -d "/" -f 2`
            echo "Environment name: $ENVIRONMENT"
            echo "environment=$ENVIRONMENT" >> $GITHUB_OUTPUT
        
        - name: Install aws cli
          id: aws-cli
          uses: unfor19/install-aws-cli-action@v1
          with:
            version: 2
            verbose: false
            arch: amd64

        - name: Create Binfinder KeyPair in AWS
          id: binfinder-keypair
          env:
            KEYPAIR_NAME: ${{ github.event.inputs.keypairName }}
            PUB_KEY: ${{ vars.BINFINDER_ED25519_PUB }}
          run: |
            which aws
            echo "pub key is $PUB_KEY, keyPairname is $KEYPAIR_NAME"
            echo "$PUB_KEY" > ~/id_rsa.pub
            cat ~/id_rsa.pub
            set +e
            aws ec2 describe-key-pairs --key-name  $KEYPAIR_NAME --output json 2> /dev/null
            [ $? -eq 0 ] || $(aws ec2 import-key-pair --key-name $KEYPAIR_NAME --public-key-material fileb://~/id_rsa.pub --output json)
            
        - name: Lookup default VPC
          id: binfinder-vpc
          run: |
            DEFAULT_VPC_ID=$(aws ec2 describe-vpcs --query 'Vpcs[0].VpcId' --output json | tr -d '"')
            echo "DEFAULT_VPC_ID=$DEFAULT_VPC_ID"
            echo "defaultVpcId=$DEFAULT_VPC_ID" >> $GITHUB_OUTPUT

        - name: Create Binfinder stack in AWS
          id: binfinder-stack
          uses: aws-actions/aws-cloudformation-github-deploy@master
          with:
            name: ${{ steps.env-name.outputs.environment }}-stack
            template: apps/binfinder/binfinder_cloudformation.yaml
            no-fail-on-empty-changeset: "1"
            parameter-overrides: >-
                BinFinderKeyName=${{ github.event.inputs.keypairName }},
                DefaultVPCId=${{ steps.binfinder-vpc.outputs.defaultVpcId }}
        
        - name: Get EC2 Public Host
          id: get-ec2-dns
          env:
            STACK_NAME: ${{ steps.env-name.outputs.environment }}-stack
          run: |
            EC2_PUBLIC_HOST=$(aws cloudformation --region us-east-1 describe-stacks --stack-name $STACK_NAME --query "Stacks[0].Outputs[0].OutputValue" --output text)
            echo "EC2_PUBLIC_HOST=$EC2_PUBLIC_HOST"
            echo "ec2PublicDnsName=$EC2_PUBLIC_HOST" >> $GITHUB_OUTPUT
        
        # - name: Initialize EC2
        #   id: init-ec2
        #   env:
        #     REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        #     AWS_DEFAULT_REGION: 'us-east-1'
        #     AWS_REGION: 'us-east-1'
        #     PRIVATE_SSH_KEY: ${{ secrets.BINFINDER_ED25519_KEY }}
        #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        #   uses: appleboy/ssh-action@master
        #   with:
        #     host: ${{ steps.get-ec2-dns.outputs.ec2PublicDnsName }}
        #     username: ${{ github.event.inputs.ec2User }}
        #     key: ${{ secrets.BINFINDER_ED25519_KEY }}
        #     envs: PRIVATE_SSH_KEY,REGISTRY,AWS_DEFAULT_REGION,AWS_REGION,AWS_ACCESS_KEY_ID,AWS_SECRET_ACCESS_KEY
        #     script: |
        #         sudo yum update -y
        #         sudo yum install awscli -y
        #         # install docker
        #         sudo yum install docker -y
        #         sudo usermod -a -G docker ec2-user
        #         id ec2-user
        #         newgrp docker
        #         sudo systemctl enable docker.service
        #         # sudo chmod 666 /var/run/docker.sock
        #         sudo systemctl start docker.service
        #         sudo systemctl status docker.service --no-pager
        #         docker version
        #         # sudo dnf install -y amazon-ecr-credential-helper
        #         # install dvc
        #         sudo wget https://dvc.org/download/linux-rpm/dvc-3.50.1
        #         sudo mv dvc-3.50.1 ~/dvc-3.50.1-1.x86_64.rpm
        #         sudo yum localinstall ~/dvc-3.50.1-1.x86_64.rpm -y
      
